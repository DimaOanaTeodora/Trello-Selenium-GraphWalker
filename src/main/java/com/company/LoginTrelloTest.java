package com.company;

/**
 * Implements the GraphWalker model: src/main/resources/SmallTest.json
 * <p/>
 * The interface SmallTest, that SomeSmallTest implements, is generated by
 * running: mvn graphwalker:generate-sources
 * also: mvn compile
 */
import org.graphwalker.core.machine.ExecutionContext;
import org.graphwalker.java.annotation.AfterExecution;
import org.graphwalker.java.annotation.BeforeExecution;
import org.graphwalker.java.annotation.GraphWalker;
import org.junit.Assert;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.firefox.FirefoxOptions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

@GraphWalker()
public class LoginTrelloTest extends ExecutionContext implements LoginTrelloModel {

    private static final Logger logger = LoggerFactory.getLogger(LoginTrelloTest.class);
    WebDriver driver;

    @BeforeExecution
    public void setup() {
        logger.info("Setup happens here");

        // Set the path to the geckodriver executable
        System.setProperty("webdriver.gecko.driver", "geckodriver.exe");

        // Configure Firefox options
        FirefoxOptions options = new FirefoxOptions();
        options.setHeadless(false); // Set to true for headless mode

        // Initialize the WebDriver
        driver = new FirefoxDriver(options);
    }

    @AfterExecution
    public void cleanup() {
        logger.info("Cleanup happens here");
    }

    public void v_Trello() {
        // Verify if the page was loaded
        WebElement welcomeText = driver.findElement(By.id("BXP-APP"));
        if (welcomeText.isDisplayed()) {
            System.out.println("Element welcomeText exists and is displayed.");
        } else {
            System.out.println("Element welcomeText does not exist or is not displayed.");
            Assert.assertTrue(!welcomeText.isDisplayed());
        }
    }

    public void v_EnterUsername() {
        // Enter Trello credentials - username
        WebElement emailField = driver.findElement(By.id("username"));
        emailField.sendKeys("pet.adoption.app.2022@gmail.com");
    }

    public void v_EnterPassword() {
        // Enter Trello credentials - password
        WebElement passwordField = driver.findElement(By.id("password"));
        passwordField.sendKeys("ContTester1234");
    }

    public void v_ViewMainWorkspace() {
        // Verify if the page was loaded
        WebElement welcomeText = driver.findElement(By.linkText("Most popular templates"));
        if (welcomeText.isDisplayed()) {
            System.out.println("Element welcomeText exists and is displayed.");
        } else {
            System.out.println("Element welcomeText does not exist or is not displayed.");
            Assert.assertTrue(!welcomeText.isDisplayed());
        }
    }

    public void e_EnterBaseURL() {
        // enter the Trello url 
        driver.get("https://trello.com/");
    }

    public void e_gotoLoginState() {
        // Click the "Log In" button
        WebElement loginButton = driver.findElement(By.linkText("Log In"));
        loginButton.click();
    }

    public void e_gotoNextSection() {
        // Click the "Next" button
        WebElement nextButton = driver.findElement(By.id("login-submit"));
        nextButton.click();
    }

    public void e_submitLoginForm() {
        // Click the "Log In" button
        WebElement submitButton = driver.findElement(By.id("login-submit"));
        submitButton.click();
    }
}